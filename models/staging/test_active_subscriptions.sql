create or replace view AMP_DB_DEV.VIEWS.ACTIVE_SUBSCRIPTIONS(
	TENANT_ID,
	DATE,
	ACTIVE_SUBSCRIPTIONS
) as
WITH RECURSIVE DATES AS (
    SELECT DATE(MIN(PLAN_CREATED_DATE)) AS DT
    FROM VIEWS.SUBSCRIPTIONS
	UNION ALL
	SELECT DATE(DATEADD(DD,1,DT)) FROM DATES WHERE DT <= CAST(CURRENT_DATE AS DATE)
),
SUBS AS (
    SELECT DISTINCT
    A.TENANT_ID,
    CAST(PLAN_CREATED_DATE AS DATE) AS PLAN_CREATED_DATE,
    CAST(PLAN_END_DATE AS DATE) AS PLAN_END_DATE,
    STRIPE_SUBSCRIPTION_ITEM_ID,
    STATUS
    FROM VIEWS.SUBSCRIPTIONS A
    LEFT JOIN (SELECT * FROM VIEWS.TEST_USER WHERE source = 'Flagged as Test User in Portal') B
    ON A.USER_ID = B.stripe_customer_id
    WHERE B.CUSTOMER_ID IS NULL
),
SUBS_CREATED AS (
    SELECT DISTINCT
    TENANT_ID,
    PLAN_CREATED_DATE,
    COUNT(*) AS SUBSCRIPTION_COUNT
    FROM SUBS SUB
    GROUP BY TENANT_ID,PLAN_CREATED_DATE
),
SUBS_CANCELED AS (
    SELECT DISTINCT
    TENANT_ID,
    PLAN_END_DATE,
    COUNT(*) AS SUBSCRIPTION_CANCEL_COUNT
    FROM SUBS SUB
    WHERE  CAST(PLAN_END_DATE AS DATE) IS NOT NULL
    GROUP BY TENANT_ID,PLAN_END_DATE
),
SUBS_RUNNING_TOTAL AS (
    SELECT A.DT,
    B.TENANT_ID,
    SUM(SUBSCRIPTION_COUNT) AS RUNNING_TOTAL
    FROM SUBS_CREATED B
    CROSS JOIN DATES A
    WHERE B.PLAN_CREATED_DATE <= A.DT
    GROUP BY A.DT,B.TENANT_ID
),
CANCEL_RUNNING_TOTAL AS (
    SELECT A.DT,
    B.TENANT_ID,
    SUM(SUBSCRIPTION_CANCEL_COUNT) AS CANCEL_RUNNING_TOTAL
    FROM SUBS_CANCELED B
    CROSS JOIN DATES A
    WHERE B.PLAN_END_DATE <= A.DT
    GROUP BY A.DT,B.TENANT_ID
)

SELECT
    A.TENANT_ID,
    A.DT AS DATE,
    IFNULL(A.RUNNING_TOTAL,0)-IFNULL(B.CANCEL_RUNNING_TOTAL,0) AS ACTIVE_SUBSCRIPTIONS
    FROM SUBS_RUNNING_TOTAL A
    LEFT JOIN CANCEL_RUNNING_TOTAL B
    ON A.DT = B.DT
    AND A.TENANT_ID = B.TENANT_ID;

